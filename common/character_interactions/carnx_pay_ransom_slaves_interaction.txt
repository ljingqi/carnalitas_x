# Offer ransom to other rulers for one of their slaves who is your relative.
# Scopes: actor / recipient is the payer, secondary_recipient is the slave owner, seconary_actor is the slave.
# Human player only.
carnx_pay_ransom_slaves_interaction = {
	category = carnx_interaction_category_slavery
	desc = carnx_pay_ransom_slaves_interaction_desc
	interface_priority = 20
	common_interaction = yes
	needs_recipient_to_open = yes
	icon = carnx_broken_chain

	greeting = positive
	send_name = carnx_pay_ransom_slaves_interaction

	populate_actor_list = {
		if = {
			limit = {
				NOT = { exists = scope:secondary_recipient }
			}
			scope:actor = {
				carnx_get_valid_payers_or_owners_effect = { LIST = valid_owners }
			}
			every_in_list = {
				list = valid_owners
				limit = {
					is_ai = yes
					carnx_can_offer_ransom_slave_to_trigger = { PARTY = scope:actor }
				}
				save_scope_as = owner
				every_relation = {
					type = slave
					limit = {
						carnx_slave_can_be_freed_trigger = yes
						carnx_slave_can_be_ransomed_by_trigger = { CHARACTER = scope:actor }
						save_temporary_scope_as = slave
						scope:owner = {
							save_temporary_opinion_value_as = {
								name = opinion_of_slave
								target = scope:slave
							}
						}
						OR = {
							AND = {
								scope:actor.gold > 0
								carnx_pay_ransom_slave_gold_ai_accept_value > 0
							}
							AND = {
								scope:owner = {
									can_add_hook = {
										target = scope:actor
										type = favor_hook
									}
								}
								carnx_pay_ransom_slave_favor_ai_accept_value > 0
							}
						}
					}
					add_to_list = characters
				}
			}
		}
	}

	populate_recipient_list = {
		scope:secondary_actor = {
			random_relation = {
				type = slave_owner
				add_to_list = characters
			}
		}
	}

	is_shown = {
		NOT = { has_game_rule = carn_slavery_content_disabled }
		scope:actor = scope:recipient
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			carnx_can_start_interaction_trigger = yes
		}
		trigger_if = {
			limit = { exists = scope:secondary_actor }
			scope:secondary_actor = {
				carnx_slave_can_be_freed_trigger = yes
				carnx_slave_can_be_ransomed_by_trigger = { CHARACTER = scope:actor }
			}
		}
	}

	on_accept = {
		show_as_tooltip = {
			scope:actor = { save_scope_as = payer }
			scope:secondary_actor = { save_scope_as = slave }
			scope:secondary_recipient = { save_scope_as = owner }
			scope:owner = {
				save_temporary_opinion_value_as = {
					name = opinion_of_slave
					target = scope:slave
				}
				if = {
					limit = {
						scope:payer.gold >= scope:slave.carnx_slave_ransom_cost_value
						scope:slave.carnx_pay_ransom_slave_gold_ai_accept_value > 0
					}
					save_scope_value_as = { name = gold value = yes }
					save_scope_value_as = { name = current_gold value = no }
					save_scope_value_as = { name = favor value = no }
				}
				else_if = {
					limit = {
						scope:payer.gold < scope:slave.carnx_slave_ransom_cost_value
						scope:payer.gold > 0
						scope:slave.carnx_pay_ransom_slave_gold_ai_accept_value > 0
					}
					save_scope_value_as = { name = gold value = no }
					save_scope_value_as = { name = current_gold value = yes }
					save_scope_value_as = { name = favor value = no }
				}
				else = {
					save_scope_value_as = { name = gold value = no }
					save_scope_value_as = { name = current_gold value = no }
					save_scope_value_as = { name = favor value = yes }
				}
			}
			carnx_ransom_slave_interaction_effect = yes
		}
		open_interaction_window = {
			interaction = carnx_pay_ransom_slave_interaction
			actor = scope:actor
			recipient = scope:secondary_recipient
			secondary_recipient = scope:secondary_actor
		}
	}

	auto_accept = yes
}