carnx_slave_concubine_court_position = {
	max_available_positions = 5
	category = court_position_category_common
	minimum_rank = county

	opinion = {
		value = carnx_regular_court_position_opinion
	}

	# Breakpoints to increase aptitude level by 1.
	aptitude_level_breakpoints = { 20 40 60 80 }

	# Scripted value to determine how well a character performs in this position.
	aptitude = {
		value = 1
		add = {
			value = diplomacy
			multiply = 2
			max = 50
			desc = court_position_skill_diplomacy
		}
		add = {
			value = attraction
			multiply = 2
			max = 50
			desc = carnx_court_position_skill_attraction
		}
		if = {
			limit = {
				has_trait = beauty_good_3
			}
			add = {
				value = 30
				desc = carnx_court_position_beauty_good_3_trait
			}
		}
		else_if = {
			limit = {
				has_trait = beauty_good_2
			}
			add = {
				value = 15
				desc = carnx_court_position_beauty_good_2_trait
			}
		}
		else_if = {
			limit = {
				has_trait = beauty_good_1
			}
			add = {
				value = 5
				desc = carnx_court_position_beauty_good_1_trait
			}
		}
		add = court_position_aptitude_traveling_friends_value
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_high_penalty_value
		# TODO Add event for bonus aptitude similar to court.8311
	}

	# Is this position even visible for usage? Root scope is the liege character.
	is_shown = {
		NOT = { has_game_rule = carn_slavery_content_disabled }
		carnx_slave_concubine_court_position_enabled_trigger = yes
	}

	# Is this a valid position for this character to employ? Root scope is the liege character.
	valid_position = {
		carnx_slave_concubine_court_position_enabled_trigger = yes
		is_adult = yes
		OR = {
			allowed_concubines = yes
			can_marry_common_trigger = yes
		}
	}

	# Is this character even shown for the position? Root scope is the liege character.
	is_shown_character = {
		scope:employee = {
			OR = {
				AND = {
					has_trait = slave
					has_relation_slave_owner = scope:liege
				}
				AND = {
					has_trait = former_slave
					is_courtier_of = scope:liege
					NOR = {
						is_married = yes
						is_concubine = yes
					}
				}
			}
			is_imprisoned = no
		}
	}

	# Is this a valid character for the position?
	valid_character = {
		scope:employee = {
			OR = {
				has_court_position = carnx_slave_concubine_court_position
				AND = {
					has_trait = slave
					has_relation_slave_owner = scope:liege
				}
			}
			carnx_can_be_slave_concubine_trigger = { LIEGE = scope:liege }
		}
	}

	# How much it costs to revoke this position.
	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 via obligation hook
			if = {
				limit = {
					court_position_obligation_hook_salary_trigger = {
						POS = carnx_slave_concubine
						LIEGE = root
					}
				}
				multiply = 0
			}
			# Avoid AI prestige issues
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
			# Special case for events
			if = {
				limit = {
					exists = this
					has_character_flag = free_revoke_cost
				}
				multiply = 0
			}
			#Lowering for LAAMPS, to match Camp Officer revoke cost
			if = {
				limit = { 
					exists = this
					is_landless_adventurer = yes
				}
				value = minor_court_position_prestige_revoke_cost
			}
		}
	}

	# How much it costs monthly to maintain this poisition.
	salary = {
		round = no
		gold = {
			value = carnx_court_position_slave_concubine_salary

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = { court_position_inner_circle_salary_trigger = { POS = carnx_slave_concubine } }
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			# Halved with obligation hook
			else_if = {
				limit = {
					court_position_obligation_hook_salary_trigger = {
						POS = carnx_slave_concubine
						LIEGE = scope:liege
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			# Halved salary
			if = {
				limit = {
					court_position_halved_salary_trigger = { POS = carnx_slave_concubine }
				}
				multiply = {
					value = 0.5
					desc = court_position_halved_salary
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			#You're working with LAAMPS now
			if = {
				limit = { 
					scope:liege ?= { is_landless_adventurer = yes }
				}
				multiply = 0
			}
		}
	}

	# Scaling modifiers gained by the employer of the court position as the employee's aptitude level increases.
	scaling_employer_modifiers = {
		terrible = {
			monthly_court_grandeur_change_mult = 0.01
		}
		poor = {
			monthly_court_grandeur_change_mult = 0.02
			monthly_prestige = 0.05
		}
		average = {
			monthly_court_grandeur_change_mult = 0.03
			monthly_prestige = 0.1
		}
		good = {
			monthly_court_grandeur_change_mult = 0.04
			monthly_prestige = 0.15
		}
		excellent = {
			monthly_court_grandeur_change_mult = 0.05
			monthly_prestige = 0.2
		}
	}

	custom_employer_modifier_description = carnx_slave_concubine_employer_custom_effect_description

	# Modifiers gained by the holder of the court position.
	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}

	# Effects that happen when the position is appointed, revoked or invalidated.
	on_court_position_received = {
		carnx_slave_concubine_title_received_effect = yes
	}
	on_court_position_revoked = {
		carnx_slave_concubine_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		carnx_slave_concubine_title_invalidated_effect = yes
	}

	# Scripted value to determine whether an AI will hire a position or not.
	candidate_score = {
		value = 100
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		scope:liege = {
			# More likely if higher rank
			if = {
				limit = {
					highest_held_title_tier >= tier_duchy
				}
				add = 50
			}
			if = {
				limit = {
					highest_held_title_tier >= tier_kingdom
				}
				add = 50
			}

			# More likely if attracted, less likely if not
			if = {
				limit = {
					is_attracted_to_gender_of = scope:employee
				}
				add = 50

				# More likely if lustful, less likely if chaste
				if = {
					limit = {
						has_trait = lustful
					}
					add = 50
				}
				else_if = {
					limit = {
						has_trait = chaste
					}
					add = -50
				}
			}
			else = {
				add = -50
			}

			# Less likely to hire an additional one if you're already employing one
			if = {
				limit = {
					employs_court_position = carnx_slave_concubine_court_position
				}
				add = -50
			}
		}
		add = court_position_debt_considerations_value
	}
}

carnx_slave_captain_court_position = {
	max_available_positions = 3
	category = court_position_category_common
	minimum_rank = county

	opinion = {
		value = carnx_regular_court_position_opinion
	}

	# Breakpoints to increase aptitude level by 1.
	aptitude_level_breakpoints = { 20 40 60 80 }

	# Scripted value to determine how well a character performs in this position.
	aptitude = {
		value = 1
		add = {
			value = martial
			multiply = 2
			max = 50
			desc = court_position_skill_martial
		}
		add = {
			value = prowess
			multiply = 2
			max = 50
			desc = court_position_skill_prowess
		}
		if = {
			limit = {
				carnx_has_tiered_trait_xp_trigger = { TRAIT = lifestyle_blademaster XP = 100 }
			}
			add = {
				value = 15
				desc = court_position_blademaster_3_trait
			}
		}
		else_if = {
			limit = {
				carnx_has_tiered_trait_xp_trigger = { TRAIT = lifestyle_blademaster XP = 50 }
			}
			add = {
				value = 10
			}
		}
		else_if = {
			limit = {
				has_trait = lifestyle_blademaster
			}
			add = {
				value = 5
				desc = court_position_blademaster_1_trait
			}
		}
		if = {
			limit = {
				has_trait = brave
			}
			add = {
				value = 10
				desc = court_position_brave_trait
			}
		}
		else_if = {
			limit = {
				has_trait = craven
			}
			add = {
				value = -10
				desc = court_position_craven_trait
			}
		}
		add = court_position_aptitude_traveling_friends_value
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_high_penalty_value
		# TODO Add event for bonus aptitude similar to court.8311
	}

	# Is this position even visible for usage? Root scope is the liege character.
	is_shown = {
		NOT = { has_game_rule = carn_slavery_content_disabled }
		carnx_slave_captain_court_position_enabled_trigger = yes
	}

	# Is this a valid position for this character to employ? Root scope is the liege character.
	valid_position = {
		carnx_slave_captain_court_position_enabled_trigger = yes
	}

	# Is this character even shown for the position? Root scope is the liege character.
	is_shown_character = {
		scope:employee = {
			OR = {
				AND = {
					has_trait = slave
					has_relation_slave_owner = scope:liege
				}
				AND = {
					has_trait = former_slave
					is_courtier_of = scope:liege
				}
			}
			is_imprisoned = no
		}
	}

	# Is this a valid character for the position?
	valid_character = {
		scope:employee = {
			OR = {
				has_court_position = carnx_slave_captain_court_position
				AND = {
					has_trait = slave
					has_relation_slave_owner = scope:liege
				}
			}
			carnx_can_be_slave_captain_trigger = { LIEGE = scope:liege }
		}
	}

	# How much it costs to revoke this position.
	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 via obligation hook
			if = {
				limit = {
					court_position_obligation_hook_salary_trigger = {
						POS = carnx_slave_captain
						LIEGE = root
					}
				}
				multiply = 0
			}
			# Avoid AI prestige issues
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
			# Special case for events
			if = {
				limit = {
					exists = this
					has_character_flag = free_revoke_cost
				}
				multiply = 0
			}
			#Lowering for LAAMPS, to match Camp Officer revoke cost
			if = {
				limit = { 
					exists = this
					is_landless_adventurer = yes
				}
				value = minor_court_position_prestige_revoke_cost
			}
		}
	}

	# How much it costs monthly to maintain this poisition.
	salary = {
		round = no
		gold = {
			value = carnx_court_position_slave_captain_salary

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = { court_position_inner_circle_salary_trigger = { POS = carnx_slave_captain } }
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			# Halved with obligation hook
			else_if = {
				limit = {
					court_position_obligation_hook_salary_trigger = {
						POS = carnx_slave_captain
						LIEGE = scope:liege
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			# Halved salary
			if = {
				limit = {
					court_position_halved_salary_trigger = { POS = carnx_slave_captain }
				}
				multiply = {
					value = 0.5
					desc = court_position_halved_salary
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			#You're working with LAAMPS now
			if = {
				limit = { 
					scope:liege ?= { is_landless_adventurer = yes }
				}
				multiply = 0
			}
		}
	}

	# Scaling modifiers gained by the employer of the court position as the employee's aptitude level increases.
	scaling_employer_modifiers = {
		terrible = {
			monthly_court_grandeur_change_mult = 0.01
		}
		poor = {
			monthly_court_grandeur_change_mult = 0.02
		}
		average = {
			monthly_court_grandeur_change_mult = 0.03
			knight_effectiveness_mult = 0.01
		}
		good = {
			monthly_court_grandeur_change_mult = 0.04
			knight_effectiveness_mult = 0.02
		}
		excellent = {
			monthly_court_grandeur_change_mult = 0.05
			knight_effectiveness_mult = 0.04
		}
	}

	# Modifiers gained by the holder of the court position.
	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}

	# Effects that happen when the position is appointed, revoked or invalidated.
	on_court_position_received = {
		carnx_slave_captain_title_received_effect = yes
	}
	on_court_position_revoked = {
		carnx_slave_captain_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		carnx_slave_captain_title_invalidated_effect = yes
	}

	# Scripted value to determine whether an AI will hire a position or not.
	candidate_score = {
		value = 150
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		scope:liege = {
			# More likely if higher rank
			if = {
				limit = {
					highest_held_title_tier >= tier_duchy
				}
				add = 50
			}
			if = {
				limit = {
					highest_held_title_tier >= tier_kingdom
				}
				add = 50
			}

			# Less likely to hire an additional one if you're already employing one
			if = {
				limit = {
					employs_court_position = carnx_slave_captain_court_position
				}
				add = -50
			}
		}
		add = court_position_debt_considerations_value
	}
}

carnx_slave_eunuch_court_position = {
	max_available_positions = 3
	category = court_position_category_common
	minimum_rank = county

	opinion = {
		value = carnx_regular_court_position_opinion
	}

	# Breakpoints to increase aptitude level by 1.
	aptitude_level_breakpoints = { 20 40 60 80 }

	# Scripted value to determine how well a character performs in this position.
	aptitude = {
		value = 1
		add = {
			value = stewardship
			multiply = 2
			max = 50
			desc = court_position_skill_stewardship
		}
		add = {
			value = intrigue
			multiply = 2
			max = 50
			desc = court_position_skill_intrigue
		}
		if = {
			limit = {
				has_trait = administrator
			}
			add = {
				value = 20
				desc = court_position_administrator_trait
			}
		}
		if = {
			limit = {
				has_trait = schemer
			}
			add = {
				value = 20
				desc = carnx_court_position_schemer_trait
			}
		}
		add = court_position_aptitude_traveling_friends_value
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
		# TODO Add event for bonus aptitude similar to court.8311
	}

	# Is this position even visible for usage? Root scope is the liege character.
	is_shown = {
		NOT = { has_game_rule = carn_slavery_content_disabled }
		carnx_slave_eunuch_court_position_enabled_trigger = yes
	}

	# Is this a valid position for this character to employ? Root scope is the liege character.
	valid_position = {
		carnx_slave_eunuch_court_position_enabled_trigger = yes
	}

	# Is this character even shown for the position? Root scope is the liege character.
	is_shown_character = {
		scope:employee = {
			OR = {
				AND = {
					has_trait = slave
					has_relation_slave_owner = scope:liege
				}
				AND = {
					has_trait = former_slave
					is_courtier_of = scope:liege
				}
			}
			is_imprisoned = no
		}
	}

	# Is this a valid character for the position?
	valid_character = {
		scope:employee = {
			OR = {
				has_court_position = carnx_slave_eunuch_court_position
				AND = {
					has_trait = slave
					has_relation_slave_owner = scope:liege
				}
			}
			carnx_can_be_slave_eunuch_trigger = { LIEGE = scope:liege }
		}
	}

	# How much it costs to revoke this position.
	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 via obligation hook
			if = {
				limit = {
					court_position_obligation_hook_salary_trigger = {
						POS = carnx_slave_eunuch
						LIEGE = root
					}
				}
				multiply = 0
			}
			# Avoid AI prestige issues
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
			# Special case for events
			if = {
				limit = {
					exists = this
					has_character_flag = free_revoke_cost
				}
				multiply = 0
			}
			#Lowering for LAAMPS, to match Camp Officer revoke cost
			if = {
				limit = { 
					exists = this
					is_landless_adventurer = yes
				}
				value = minor_court_position_prestige_revoke_cost
			}
		}
	}

	# How much it costs monthly to maintain this poisition.
	salary = {
		round = no
		gold = {
			value = carnx_court_position_slave_eunuch_salary

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = { court_position_inner_circle_salary_trigger = { POS = carnx_slave_eunuch } }
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			# Halved with obligation hook
			else_if = {
				limit = {
					court_position_obligation_hook_salary_trigger = {
						POS = carnx_slave_eunuch
						LIEGE = scope:liege
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			# Halved salary
			if = {
				limit = {
					court_position_halved_salary_trigger = { POS = carnx_slave_eunuch }
				}
				multiply = {
					value = 0.5
					desc = court_position_halved_salary
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			#You're working with LAAMPS now
			if = {
				limit = { 
					scope:liege ?= { is_landless_adventurer = yes }
				}
				multiply = 0
			}
		}
	}

	# Scaling modifiers gained by the employer of the court position as the employee's aptitude level increases.
	scaling_employer_modifiers = {
		terrible = {
			monthly_court_grandeur_change_mult = 0.01
			enemy_hostile_scheme_phase_duration_add = 0.5
		}
		poor = {
			monthly_court_grandeur_change_mult = 0.02
			character_capital_county_monthly_development_growth_add = 0.05
			enemy_hostile_scheme_phase_duration_add = 1
		}
		average = {
			monthly_court_grandeur_change_mult = 0.03
			character_capital_county_monthly_development_growth_add = 0.1
			enemy_hostile_scheme_phase_duration_add = 2
		}
		good = {
			monthly_court_grandeur_change_mult = 0.04
			character_capital_county_monthly_development_growth_add = 0.2
			enemy_hostile_scheme_phase_duration_add = 4
		}
		excellent = {
			monthly_court_grandeur_change_mult = 0.05
			character_capital_county_monthly_development_growth_add = 0.4
			enemy_hostile_scheme_phase_duration_add = 8
		}
	}

	# Modifiers gained by the holder of the court position.
	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}

	# Effects that happen when the position is appointed, revoked or invalidated.
	on_court_position_received = {
		carnx_slave_eunuch_title_received_effect = yes
	}
	on_court_position_revoked = {
		carnx_slave_eunuch_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		carnx_slave_eunuch_title_invalidated_effect = yes
	}

	# Scripted value to determine whether an AI will hire a position or not.
	candidate_score = {
		value = 150
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		scope:liege = {
			# More likely if higher rank
			if = {
				limit = {
					highest_held_title_tier >= tier_duchy
				}
				add = 50
			}
			if = {
				limit = {
					highest_held_title_tier >= tier_kingdom
				}
				add = 50
			}

			# Less likely to hire an additional one if you're already employing one
			if = {
				limit = {
					employs_court_position = carnx_slave_eunuch_court_position
				}
				add = -50
			}
		}
		add = court_position_debt_considerations_value
	}
}
